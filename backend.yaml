- name: Configure backend server
  hosts: backend
  become: yes
  vars:

  tasks:
  - name: Disable default nodejs
    ansible.builtin.command: dnf module disable nodejs -y

  - name: Enable nodejs:20
    ansible.builtin.command: dnf module enable nodejs:20 -y
  
  - name: Install nodejs
    ansible.builtin.dnf: # only works for redhat family
      name: "{{item}}"
      state: installed
    loop:
    - nodejs
    - mysql

  - name: Create Expense user
    ansible.builtin.user:
      name: expense

  - name: Create app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Download backend code
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip

  - name: Extract/unzip backend code
    ansible.builtin.unarchive:
      src: /tmp/backend.zip  # by default ansible checks in ansible server
      dest: /app
      # If we get below error, it means ansible is chceking for the file in ansible-server
      #{"changed": false, "msg": "Could not find or access '/tmp/backend.zip' on the Ansible Controller.\nIf you are using a 
      # module and expect the file to exist on the remote, see the remote_src option"}

      remote_src: yes   # Unarchive a file that is already on the remote machine


  
